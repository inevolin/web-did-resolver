{"version":3,"file":"resolver.umd.js","sources":["../src/resolver.ts"],"sourcesContent":["import fetch from 'cross-fetch'\nimport { DIDDocument, DIDResolutionResult, DIDResolver, ParsedDID } from 'did-resolver'\n\nconst DOC_PATH = '/.well-known/did.json'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function get(url: string): Promise<any> {\n  const res = await fetch(url, { mode: 'cors' })\n  if (res.status >= 400) {\n    throw new Error(`Bad response ${res.statusText}`)\n  }\n  return res.json()\n}\n\nexport function getResolver(): Record<string, DIDResolver> {\n  async function resolve(did: string, parsed: ParsedDID): Promise<DIDResolutionResult> {\n    let err = null\n    let path = decodeURIComponent(parsed.id) + DOC_PATH\n    const id = parsed.id.split(':')\n    if (id.length > 1) {\n      path = id.map(decodeURIComponent).join('/') + '/did.json'\n    }\n    path = path.replace(/localhost\\/(\\d+)/, 'localhost:$1')\n\n    const url = path.startsWith('localhost') ? `http://${path}` : `https://${path}`\n\n    const didDocumentMetadata = {}\n    let didDocument: DIDDocument | null = null\n\n    do {\n      try {\n        didDocument = await get(url)\n      } catch (error) {\n        err = `resolver_error: DID must resolve to a valid https URL containing a JSON document: ${error}`\n        break\n      }\n\n      // TODO: this excludes the use of query params\n      const docIdMatchesDid = didDocument?.id === did\n      if (!docIdMatchesDid) {\n        err = 'resolver_error: DID document id does not match requested did'\n        // break // uncomment this when adding more checks\n      }\n      // eslint-disable-next-line no-constant-condition\n    } while (false)\n\n    const contentType =\n      typeof didDocument?.['@context'] !== 'undefined' ? 'application/did+ld+json' : 'application/did+json'\n\n    if (err) {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: {\n          error: 'notFound',\n          message: err,\n        },\n      }\n    } else {\n      return {\n        didDocument,\n        didDocumentMetadata,\n        didResolutionMetadata: { contentType },\n      }\n    }\n  }\n\n  return { web: resolve }\n}\n"],"names":["get","url","fetch","mode","res","status","Error","statusText","json","_settle","pact","state","value","_Pact","s","v","o","bind","then","observer","DOC_PATH","prototype","onFulfilled","onRejected","result","callback","e","_this","getResolver","resolve","did","parsed","contentType","didDocument","err","didDocumentMetadata","didResolutionMetadata","error","message","path","decodeURIComponent","id","split","length","map","join","replace","startsWith","docIdMatchesDid","web"],"mappings":"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"}